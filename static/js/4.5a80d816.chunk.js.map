{"version":3,"sources":["pages/Math/PrimeNumbers/PrimeNumbers.module.css","components/UI/Modal/BigCenteredModal.js","components/UI/Modal/AlertModal.js","components/UI/Table/TableCell/TableCell.js","components/UI/Table/Table.js","utility/math/math.js","pages/Math/PrimeNumbers/PrimeNumbers.js","components/UI/OnOffBtn/OnOffBtn.js","components/UI/OnOffBtn/OnOffBtn.module.css","components/UI/Modal/BigCenteredModal.module.css"],"names":["module","exports","BigCenteredModal","props","Modal","aria-labelledby","Header","closeButton","Body","id","title","className","styles","BodyContainer","body","dropzone","Footer","Button","variant","onClick","onHide","AlertModal","show","size","Title","alertTitle","alertBody","onCloseAlertModal","TableCell","header","cellClass","scope","children","colSpan","colspan","Table","colHeaders","headers","map","i","tableRows","rows","row","rowTextArr","txt","text","push","colors","toString","headerText","classes","fillMatrixNormal","matrixSize","tableRowData","cellColors","j","isPrimeNumber","number","isEvenNumber","PrimeNumbers","useState","setMatrixSize","setTableRows","tableStyle","setTableStyle","spiral","bordered","colorBtns","primes","evens","odds","onOffBtns","setOnOffBtns","showModal","setShowModal","showAlertModal","setShowAlertModal","evenPrimeTotals","setEvenPrimeTotals","PrimeNumbersContainer","dialogClassName","InputGroup","FormControl","placeholder","aria-label","aria-describedby","onChange","event","target","value","Append","primeTotalsObj","numberQty","evensArr","firstPrime","secPrime","counts","forEach","x","result","length","findEvenNumbersPrimeTotals","primeTotalsJSX","el","arr","div","disabled","TableBtnsContainer","Hidden","OnOffBtn","isOn","label","onChanged","checked","prevState","results","counter","startColumn","endColumn","startRow","endRow","array","colorsArr","fillMatrixSpiral","ColorBtnsContainer","currentRows","TableContainer","OnOffBtnContainer","onlabel","offlabel","onstyle","offstyle"],"mappings":"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","file":"static/js/4.5a80d816.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"PrimeNumbersContainer\":\"PrimeNumbers_PrimeNumbersContainer__1yH91\",\"TableContainer\":\"PrimeNumbers_TableContainer__StKHU\",\"Hidden\":\"PrimeNumbers_Hidden__pmXcR\",\"TableBtnsContainer\":\"PrimeNumbers_TableBtnsContainer__3glyh\",\"ColorBtnsContainer\":\"PrimeNumbers_ColorBtnsContainer__2Ta_y\"};","import React from 'react';\n\nimport { Modal, Button } from 'react-bootstrap';\n\nimport styles from './BigCenteredModal.module.css';\n\nconst BigCenteredModal = props => {\n    return (\n        <Modal\n        {...props}       \n        aria-labelledby=\"example-custom-modal-styling-title\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Body  id=\"example-custom-modal-styling-title\">\n            {props.title}\n          </Modal.Body>\n        </Modal.Header>\n        <Modal.Body>\n          <div className={styles.BodyContainer} >\n          {props.body}\n          </div>\n          <div>{props.dropzone}</div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n}\n\nexport default BigCenteredModal;","import React from 'react';\n\nimport { Modal, Button } from 'react-bootstrap';\n\nconst AlertModal = props => { \n    return (\n      <>  \n        <Modal show={props.show} size=\"sm\">\n          <Modal.Header className=\"bg-danger\">\n            <Modal.Title className=\"text-light\" >{props.alertTitle}</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>{props.alertBody}</Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"danger\" onClick={props.onCloseAlertModal}>\n              Close\n            </Button>           \n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\n  export default AlertModal;","import React from 'react';\n\nimport './tableCell.css';\n\nconst TableCell = props => {\n    return  props.header ? <th className={props.cellClass} scope={props.scope}>{props.children}</th>:\n    <td className={props.cellClass} colSpan={props.colspan}>{props.children}</td>;\n}\n\nexport default TableCell;","import React from 'react';\n\nimport TableCell from './TableCell/TableCell';\n\nimport './table.css';\n\nconst Table = props => {\n\n    let colHeaders;\n\n     if (props.headers) {\n         colHeaders = props.headers.map((header, i) => <TableCell\n             key={i + 'tableColHeader'}\n             scope=\"col\"\n             header>{header}</TableCell>);\n     }\n\n\n    const tableRows = props.rows.map((row, i) => {\n        const rowTextArr = [];\n        for (let txt in row.text) {\n            rowTextArr.push(<TableCell\n                key={i.toString()+ txt.toString() + 'tableCellKey'}\n                colspan={row.colspan}\n                cellClass={row.colors && row.colors[txt]}>{row.text[txt]}</TableCell>)\n        };\n        return (<tr key={i + 'trKey'}>\n            {row.headerText && <TableCell\n                scope=\"row\"\n                header>{row.headerText}</TableCell>}\n            {rowTextArr}\n        </tr>)\n    });\n\n    return (\n            <table className={\"table-fit \" + props.classes}>\n                {colHeaders && <thead>\n                    <tr>\n                        {colHeaders}\n                    </tr>\n                </thead>}\n                <tbody>\n                    {tableRows}\n                </tbody>\n            </table>\n    );\n}\n\nexport default Table;","import React from 'react';\n\nexport const fillMatrixNormal = (matrixSize, tableRowData) => {\n    const rows = [];\n    let cellColors = [];\n    for(let i = 1; i <= matrixSize; i++) {\n        for(let j = ((i-1)*matrixSize)+1; j <= matrixSize*i; j++){\n           tableRowData.push(j);\n           cellColors.push('defaultCell');\n        }\n        rows.push({text:tableRowData, colors: cellColors});\n        tableRowData = [];\n        cellColors = [];\n      }\n      return rows;\n}\n\nexport const fillMatrixSpiral = matrixSize => {\n    const results = [];\n  for (let i = 0; i < matrixSize; i++) {\n      results.push([]);\n    }\n  let counter = 1;\n    let startColumn = 0;\n    let endColumn = matrixSize - 1;\n    let startRow = 0;\n    let endRow = matrixSize - 1;\n    while (startColumn <= endColumn && startRow <= endRow) {\n      // Top row\n      for (let i = startColumn; i <= endColumn; i++) {\n        results[startRow][i] = counter;\n        counter++;\n      }\n      startRow++;\n  // Right column\n      for (let i = startRow; i <= endRow; i++) {\n        results[i][endColumn] = counter;\n        counter++;\n      }\n      endColumn--;\n  // Bottom row\n      for (let i = endColumn; i >= startColumn; i--) {\n        results[endRow][i] = counter;\n        counter++;\n      }\n      endRow--;\n  // start column\n      for (let i = endRow; i >= startRow; i--) {\n        results[i][startColumn] = counter;\n        counter++;\n      }\n      startColumn++;\n    }\n\n    const resultsObj = results.map(array => {\n      let colorsArr = [];\n      // eslint-disable-next-line no-unused-vars\n      for(let el in array) {\n        colorsArr.push('defaultCell');\n      }\n      return {text: array,colors: colorsArr};\n    })\n  return resultsObj;\n  }\n\n  export const isPrimeNumber = number => {\n      if(number === 1) {\n        return false;\n      }\n      if(number === 2 ) {\n        return true;\n      }\n\n      for(let i = 2; i <= (number / 2); i++) {\n        if(number % i === 0) {\n          return false;\n        }\n      }\n      \n      return true;\n  }\n\n  export const isEvenNumber = number => {\n    if(number === 1) {\n      return false;\n    }\n    if(number === 2 ) {\n      return true;\n    }\n      if(number % 2 === 0) {\n        return true;\n      }\n    \n    return false;\n}\n\nexport const findEvenNumbersPrimeTotals = numberQty => {\n  const evensArr = [2];\n  const firstPrime = [1];\n  const secPrime = [1];\n  for(let i = 3;i <= numberQty; i++) {\n    if(isEvenNumber(i)) {\n        for(let j = 2; j <= i/2; j++) {\n          if(isPrimeNumber(j)) {\n            if(isPrimeNumber(i-j)){        \n              evensArr.push(i);\n              firstPrime.push(j);\n              secPrime.push(i-j);             \n            }\n          }\n        }\n    }   \n  }\n  const counts = {};\n  evensArr.forEach((x) => { counts[x] = (counts[x] || 0)+1; });\n\n  const result = {};\n for(let i=0; i < evensArr.length; i++){\n    result[counts[evensArr[i]]] = [];\n }\n\n for(let i=0; i < evensArr.length; i++){\n  result[counts[evensArr[i]]].push(<p><b>{evensArr[i]}</b>={firstPrime[i]}+{secPrime[i]}</p>);\n}\n\nreturn result;\n\n}\n","import React, { useState } from 'react';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\n\nimport Modal from '../../../components/UI/Modal/BigCenteredModal';\nimport AlertModal from '../../../components/UI/Modal/AlertModal';\nimport OnOffBtn from '../../../components/UI/OnOffBtn/OnOffBtn';\nimport Table from '../../../components/UI/Table/Table';\nimport { fillMatrixNormal,\n    fillMatrixSpiral,\n     isPrimeNumber,\n     isEvenNumber,\n   findEvenNumbersPrimeTotals\n    } from '../../../utility/math/math';\n\nimport styles from './PrimeNumbers.module.css';\n\nconst PrimeNumbers = props => {\n   const maxMatrixSize = 50;\n   const [matrixSize, setMatrixSize] = useState('');\n   const [tableRows, setTableRows] = useState([]);\n   const [tableStyle, setTableStyle] = useState('table table-bordered');\n   const [onOffBtns, setOnOffBtns] = useState({spiral: false,\n       bordered: true,\n        colorBtns: {\n         primes: false,\n         evens: false,\n         odds: false\n   }});\n   const [showModal, setShowModal] = useState(false);\n   const [showAlertModal, setShowAlertModal] = useState(false);\n   const [evenPrimeTotals, setEvenPrimeTotals] = useState();\n\n   const resetAllBtns = () => {\n      setOnOffBtns({spiral: false,\n         bordered: true,\n          colorBtns: {\n           primes: false,\n           evens: false,\n           odds: false\n     }});\n   }\n\n   const matrixSizeHandler = event => {\n      if(event.target.value <= maxMatrixSize) {\n         setMatrixSize(event.target.value);\n      } else {\n         setShowAlertModal(true);\n      }\n   };\n\n   let rows = [];\n   let tableRowData = [];\n\n   const createMatrixHandler = () => {\n      resetAllBtns();\n         rows = fillMatrixNormal(matrixSize, tableRowData, []);\n      setTableRows(rows);\n\n      const primeTotalsObj = findEvenNumbersPrimeTotals(matrixSize * matrixSize);\n\n      const primeTotalsJSX = [];\n      for(let el in primeTotalsObj) {\n         const arr = [];\n         for(let div in primeTotalsObj[el]) {\n            arr.push(primeTotalsObj[el][div]);\n         }  \n         primeTotalsJSX.push(<div className=\"m-4\">\n               <label>{el} diff prime totals</label>\n               <div className=\"mr-3\">{arr}</div>\n            </div>)\n      }\n      setEvenPrimeTotals(primeTotalsJSX);\n\n   }\n\n   const spiralToggleHandler = checked => {\n      setOnOffBtns(prevState => ({\n         ...prevState,\n         spiral: checked,\n         colorBtns: {\n            primes: false,\n            evens: false,\n            odds: false\n         }\n      }));\n      if(!checked) {\n         rows = fillMatrixNormal(matrixSize, tableRowData);\n      } else {\n         rows = fillMatrixSpiral(matrixSize);\n\n      }\n      setTableRows(rows);\n   }\n\n   const borderToggleHandler = checked => {\n      setOnOffBtns(prevState => ({\n         ...prevState,\n         bordered: checked\n      }));\n      if(!checked) {\n         setTableStyle('table borderless')\n      } else {\n         setTableStyle('table table-bordered');\n      }\n   }\n\n   const showPrimesHandler = checked => {\n      setOnOffBtns(prevState => ({\n         ...prevState,\n         colorBtns:{\n            ...prevState.colorBtns,\n            primes: checked\n         }\n      }));\n      let currentRows = [];\n      if(checked) {\n        currentRows = tableRows.map(el => {\n           for(let txt in el.text) {\n             if (el.text[txt] === 2){\n               el.colors[txt] = ' numberTwo';\n              } else if(isPrimeNumber(el.text[txt])) {\n                 el.colors[txt] = ' primeNumberCell';\n              } \n           }\n           return el;\n        })\n      } else {\n         currentRows = tableRows.map(el => {\n            for(let txt in el.text) {             \n               if (el.text[txt] === 2){\n                  el.colors[txt] = ' defaultCell';\n                 } else if(isPrimeNumber(el.text[txt])) {\n                    el.colors[txt] = ' defaultCell';\n                 }            \n            }\n            return el;\n         })\n      }\n      setTableRows(currentRows);\n   }\n\n   const showEvensHandler = checked => {\n      setOnOffBtns(prevState => ({\n         ...prevState,\n         colorBtns:{\n            ...prevState.colorBtns,\n            evens: checked\n         }\n      }));\n      let currentRows = [];\n      if(checked) {\n        currentRows = tableRows.map(el => {\n           for(let txt in el.text) {\n             if (el.text[txt] === 2){\n               el.colors[txt] = ' numberTwo';\n              } else if(isEvenNumber(el.text[txt])) {\n                 el.colors[txt] = ' evenNumberCell';\n              } \n           }\n           return el;\n        })\n      } else {\n         currentRows = tableRows.map(el => {\n            for(let txt in el.text) {\n               if (el.text[txt] === 2){\n                 el.colors[txt] = ' defaultCell';\n                } else if(isEvenNumber(el.text[txt])) {\n                   el.colors[txt] = ' defaultCell';\n                } \n             }\n             return el;\n          })\n      }\n      setTableRows(currentRows);\n   }\n\n   const clearMatrixHandler = () => {\n      setTableRows([]);\n      setMatrixSize('');\n   }\n\n  \n\n   return (\n      <div className={styles.PrimeNumbersContainer + \" \" + { ...props.classes }} >\n         <Modal\n          show={showModal}\n           onHide={() => {setShowModal(false)}}\n              body={evenPrimeTotals}\n              dialogClassName=\"modal-90w\"\n           />\n           <AlertModal\n           alertTitle=\"Matrix Size Alert\"\n           alertBody={\"Max matrix size could be \" + maxMatrixSize}\n            onCloseAlertModal={() => setShowAlertModal(false)}\n             show={showAlertModal} />\n         <InputGroup className=\"mb-3 col-md-3\">\n\n            <FormControl\n               placeholder=\"Matrix Size\"\n               aria-label=\"Matrix Size\"\n               aria-describedby=\"basic-addon2\"\n               onChange={matrixSizeHandler}\n               value={matrixSize}\n            />\n            <InputGroup.Append>\n               <Button onClick={createMatrixHandler} disabled={!matrixSize || matrixSize <= 0} >Calculate</Button>\n               <Button className=\"ml-3\" onClick={clearMatrixHandler} variant=\"danger\" disabled={tableRows.length === 0} >Clear</Button>\n            </InputGroup.Append>\n         </InputGroup>\n         <div className={tableRows.length > 0 ? styles.TableBtnsContainer: styles.TableBtnsContainer + \" \" + styles.Hidden + \" m-3\" }>\n         <Button onClick={() => {setShowModal(true)}} size=\"xs\" variant=\"outline-dark\" >Show Totals</Button>\n               <OnOffBtn\n                  isOn={onOffBtns.spiral}\n                  label=\"Spiral Numbers:\"\n                  onChanged={spiralToggleHandler}\n                  size=\"sm\"\n               />\n                  <OnOffBtn\n                  isOn={onOffBtns.bordered}\n                  label=\"Bordered Table:\"\n                  onChanged={borderToggleHandler}\n                  size=\"sm\"\n               />    \n               <div className={styles.ColorBtnsContainer} >\n               <OnOffBtn\n                  isOn={onOffBtns.colorBtns.primes}\n                  label=\"Show Primes:\"\n                  onChanged={showPrimesHandler}\n                  size=\"xs\"\n               />\n                <OnOffBtn\n                  isOn={onOffBtns.colorBtns.evens}\n                  label=\"Show Evens:\"\n                  onChanged={showEvensHandler}\n                  size=\"xs\"\n               />             \n               </div>              \n         </div>\n\n         <div className={tableRows.length > 1 ?styles.TableContainer: styles.TableContainer+ \" \" + styles.Hidden+ \" ml-3\"} >\n               <Table\n               classes={tableStyle}\n                  rows={tableRows}\n               />\n\n         </div>\n\n      </div>\n   );\n}\n\nexport default PrimeNumbers;","import React from 'react';\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react';\n\nimport styles from './OnOffBtn.module.css';\n\nconst OnOffBtn = props => {\n\n return (\n <div className={styles.OnOffBtnContainer}>\n <div className=\"mr-2\">{props.label}</div>\n    <BootstrapSwitchButton \n    checked={props.isOn}\n    onlabel=\"On\"\n    offlabel=\"Off\"\n    onstyle=\"success\"\n    offstyle=\"danger\"\n    onChange={props.onChanged}\n    size={props.size}\n/>\n </div>\n )\n};\n\nexport default OnOffBtn;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OnOffBtnContainer\":\"OnOffBtn_OnOffBtnContainer__2gThA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BodyContainer\":\"BigCenteredModal_BodyContainer__2HPzv\"};"],"sourceRoot":""}